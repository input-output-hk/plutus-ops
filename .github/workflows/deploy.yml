name: Deploy

on:
  push:
    branches:
    - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: deploy
    env:
      BITTE_ADMIN_TOKEN: ${{ secrets.BITTE_ADMIN_TOKEN }}
      SECRETS_TAR_GZ: ${{ secrets.SECRETS_TAR_GZ }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Nix
        uses: cachix/install-nix-action@v13
        with:
          install_url: https://github.com/numtide/nix-unstable-installer/releases/download/nix-2.4pre20210823_af94b54/install
          extra_nix_config: |
            experimental-features = nix-command flakes ca-references
            substituters = https://hydra.iohk.io https://iohk.cachix.org https://cache.nixos.org/ https://hydra.mantis.ist
            trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= iohk.cachix.org-1:DpRUyj7h7V830dp/i6Nti+NEO2/nhblbov/8MW7Rqoo= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.mantis.ist-1:4LTe7Q+5pm8+HawKxvmn2Hx0E3NbkYjtf1oWv+eAmTo=

      - name: Prepare dev environment
        run: |
          nix -L build .#devShellEnv --out-link $RUNNER_TEMP/nix-dev-env.json
          nix print-dev-env $RUNNER_TEMP/nix-dev-env.json > $RUNNER_TEMP/nix-dev-env

      - name: Set up secrets
        run: |
          source $RUNNER_TEMP/nix-dev-env

          cat > ~/.netrc <<EOF
          machine api.github.com
          password $BITTE_ADMIN_TOKEN
          EOF

          echo "$SECRETS_TAR_GZ" | base64 --decode | tar xz

	  iogo login >> $RUNNER_TEMP/nix-dev-env

      # To get faster deploys for now, we assume that any tf or NixOS
      # changes were applied already.
      # - name: Deploy infra
      #   run: |
      #     source $RUNNER_TEMP/nix-dev-env
      #     for ws in network core consul clients
      #     do
      #       bitte tf $ws plan
      #       bitte tf $ws apply
      #     done
      #
      # - name: Deploy systems
      #   run: source $RUNNER_TEMP/nix-dev-env && bitte rebuild --delay 30

      - name: Deploy jobs
        run: |
          source $RUNNER_TEMP/nix-dev-env
          iogo list-jobs | while read -r jobLine
          do
            set $jobLine
            echo "Checking if $1:$2 needs redeploying" >&2
            if ! iogo plan --namespace=$1 $2 --output plan.hcl > command
            then
              echo "Redeploying $1:$2" >&2
              $(grep "nomad job run" command)
            fi
          done
